#
# mapclient - Pylons configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = false

# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
#smtp_server = localhost
#error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

[app:main]
use = egg:mapclient
full_stack = true
static_files = true

cache_dir = %(here)s/data
beaker.session.key = mapclient
beaker.session.secret = ${app_instance_secret}
app_instance_uuid = ${app_instance_uuid}

# Map Client - Application Settings
mapclient.debug = true
mapclient.proxy = true

mapclient.url.prefix =
mapclient.relative.path = /
mapclient.url.catalog = http://web.dev.publicamundi.eu/
mapclient.catalog.metadata.database = false
mapclient.catalog.metadata.relative =
mapclient.catalog.metadata.physical =
mapclient.feedback.url.el =
mapclient.feedback.url.en =

#Proxy

# Response size limit (in bytes)
mapclient.proxy.limit.default = 1048576

# URLs white list (WMS requests are always allowed)
mapclient.proxy.white-list = http://zoo.dev.publicamundi.eu/cgi-bin/zoo_loader.cgi
# Response size limit for URLs of the white list. Overrides mapclient.proxy.limit.default
mapclient.proxy.limit.white-list = 10485760

# Data API
dataapi.sqlalchemy.catalog = postgresql://user:password@host:port/database
dataapi.sqlalchemy.vectorstore = postgresql://user:password@host:port/database

dataapi.cors.enabled = true

dataapi.error.details = false

dataapi.timeout = 30000

dataapi.export.enabled = true
dataapi.export.formats.disabled = GPKG

dataapi.wps.endpoint = http://zoo.dev.publicamundi.eu/cgi-bin/zoo_loader.cgi
dataapi.wps.delay = 2000
dataapi.wps.corsEnabled = false

# Bing Maps application key
mapclient.base.layer.key =

# Map center expected to be in the form of X, Y (CRS 3857 / Google 900913)
mapclient.map.center = 2448716, 4600000
mapclient.map.zoom = 7

# File upload settings
upload.path = %(here)s/data/uploads/

# If you would like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# SQLAlchemy database URL
mapclient.sqlalchemy.url = postgresql://user:password@host:port/database
vectorstore.sqlalchemy.url = postgresql://user:password@host:port/database

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false

# Logging configuration
[loggers]
keys = root, routes, mapclient, sqlalchemy

[handlers]
keys = console, filelog

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console, filelog

[logger_routes]
level = WARN
handlers = console, filelog
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_mapclient]
level = WARN
handlers = console, filelog
qualname = mapclient

[logger_sqlalchemy]
level = WARN
handlers = console, filelog
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_filelog]
class = handlers.RotatingFileHandler
args = ('%(here)s/data/logs/mapclient.log','a', 10485760, 10)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
